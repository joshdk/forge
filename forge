#!/usr/bin/env python

import sys
import os.path
import time



def main(argv=None):
	if argv is None:
		argv = sys.argv
	argc=len(argv)

	if argc>=3:
		template=os.path.expanduser('~/Templates/'+argv[1])
		argv[2]=os.path.abspath(argv[2])

		if not os.path.isfile(template):
			#print 'no template for: '+template
			os.system("touch "+argv[2])
			return 1

		fin=None
		try:
			fin=open(template,'r')
		except IOError:
			print 'forge: cannot open `'+template+'\' for reading'
			return 0

		fout=None
		try:
			fout=open(argv[2],'w')
		except IOError:
			print 'forge: cannot open `'+argv[2]+'\' for writing'
			return 0


		macros=dict({
			'[[dir]]' :os.path.split(argv[2])[0],
			'[[file]]':os.path.split(argv[2])[1],
			'[[base]]':os.path.splitext(os.path.split(argv[2])[1])[0],
			'[[ext]]' :os.path.splitext(os.path.split(argv[2])[1])[1][1:],
			'[[date]]':time.strftime('%Y-%m-%d'),
			'[[time]]':time.strftime('%H:%M:%S'),
			'[[user]]':os.getlogin(),
			'[[host]]':os.getenv('HOSTNAME')
		})

		print macros
		for line in fin:
			for key,value in macros.items():
				line=line.replace(key,value)
			fout.write(line)
		fout.close()
		fin.close()


	elif argc==2:
		argv[1]=os.path.abspath(argv[1])
		os.system("touch "+argv[1])
		return 1

	else:
		print 'forge: missing file operand'
		print 'Try `forge --help\' for more information'






if __name__ == "__main__":
	sys.exit(main())
